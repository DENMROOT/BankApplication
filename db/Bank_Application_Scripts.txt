-- таблица банк

CREATE TABLE BANK( 
    ID INT PRIMARY KEY, 
    NAME VARCHAR(255));

INSERT INTO BANK VALUES(1, 'Мой тестовый банк № 1');


-- таблица счетов
DROP TABLE ACCOUNTS;
DROP TABLE CLIENTS;

CREATE TABLE ACCOUNTS( 
    ID IDENTITY PRIMARY KEY, 
    CLIENT_ID INT,
    ACCOUNT_TYPE VARCHAR(255),
    INITIALOVERDRAFT DECIMAL(10,2),
    BALANCE DECIMAL(10,2),
    OVERDRAFT DECIMAL(10,2)   
);

INSERT INTO ACCOUNTS VALUES(1,1, 'S', 0,500,0);
INSERT INTO ACCOUNTS VALUES(2,1, 'C', 1000,0,800);

INSERT INTO ACCOUNTS VALUES(3,2, 'S', 0,400,0);
INSERT INTO ACCOUNTS VALUES(4,2, 'C', 900,0,900);

INSERT INTO ACCOUNTS VALUES(5,3, 'S', 0,300,0);
INSERT INTO ACCOUNTS VALUES(6,3, 'C', 1100,0,500);

INSERT INTO ACCOUNTS VALUES(7,4, 'S', 0,200,0);
INSERT INTO ACCOUNTS VALUES(8,4, 'C', 1000,0,900);


CREATE TABLE CLIENTS( 
    ID IDENTITY PRIMARY KEY, 
    BANK_ID INT,
    NAME VARCHAR(255),
    GENDER VARCHAR(255),
    EMAIL VARCHAR(255),
    PHONE VARCHAR(255),
    CITY VARCHAR(255),
    ACTIVE_ACCOUNT_ID INT,
    FOREIGN KEY(BANK_ID) 
	REFERENCES BANK(ID),
    FOREIGN KEY(ACTIVE_ACCOUNT_ID) 
	REFERENCES ACCOUNTS(ID)
);

INSERT INTO CLIENTS VALUES(1,1, 'Денис Макаров','m', 'denm2000@ukr.net','(067)1231212','Киев',Null);
INSERT INTO CLIENTS VALUES(2,1, 'Вася Петров','m', 'vasya@ukr.net','(067)4321212','Киев',Null);
INSERT INTO CLIENTS VALUES(3,1, 'Юра Иванов','m','yuri@ukr.net','(096)7771212','Днепропетровск',Null);
INSERT INTO CLIENTS VALUES(4,1, 'Оля Сербина','f', 'olya@ukr.net','(068)2221212','Жмеринка',Null);

ALTER TABLE ACCOUNTS
ADD FOREIGN KEY (CLIENT_ID) 
REFERENCES CLIENTS(ID)



-- найти всех клиентов и отобразить остаток на их счетах
SELECT 
    C.NAME,
    C.EMAIL,
    C.PHONE,
    C.CITY,
    A.BALANCE
FROM 
    CLIENTS C 
    JOIN BANK B ON C.BANK_ID=B.ID
    JOIN ACCOUNTS A ON C.ID=A.ID
WHERE A.ACCOUNT_TYPE='S' AND B.NAME='Мой тестовый банк № 1'

-- найти всех клиентов-должников, сортировать по размеру долга 
SELECT 
    C.NAME,  
    (INITIALOVERDRAFT-OVERDRAFT)  DIFFERENCE
FROM 
    ACCOUNTS A
    JOIN CLIENTS C ON A.CLIENT_ID=C.ID
WHERE A.INITIALOVERDRAFT<>A.OVERDRAFT
ORDER BY DIFFERENCE

-- вывести всех клиентов, чьи вклады превышают 1000

SELECT * FROM (
SELECT 
    C.NAME,  
    SUM(A.BALANCE) AS TOTAL_BALANCE
FROM 
    ACCOUNTS A
    JOIN CLIENTS C ON A.CLIENT_ID=C.ID
GROUP BY A.CLIENT_ID) 
WHERE 
    TOTAL_BALANCE>1000

-- UPDATE положить деньги на накопительный счет клиента, сняв со сберегательного
UPDATE 
    ACCOUNTS A
SET 
    A.BALANCE=700
WHERE A.ID=1



/////////////////////////////////////////////////////////////////////////////////

UPDATE BANK SET NAME='My Bank' WHERE ID=1;

SELECT 
    C.ID AS ID,
    C.NAME AS NAME,
    C.GENDER AS GENDER,
    C.EMAIL AS EMAIL,
    C.PHONE AS PHONE,
    C.CITY AS CITY,
    C.ACTIVE_ACCOUNT_ID AS ACTIVEACCOUNTID
FROM
    CLIENTS C
WHERE 
    BANK_ID = 1
AND 
    NAME = 'Денис Макаров'



SELECT 
    A.ID AS ID,
    A.CLIENT_ID AS CLIENTID,
    A.ACCOUNT_TYPE AS ACCOUNTTYPE,
    A.INITIALOVERDRAFT AS OVERDRAFT,
    A.BALANCE AS BALANCE,
    A.OVERDRAFT AS OVERDRAFT
FROM ACCOUNTS A
WHERE A.CLIENT_ID = 1

INSERT INTO CLIENTS (BANK_ID,NAME,GENDER,EMAIL,PHONE,CITY,ACTIVE_ACCOUNT_ID) VALUES (1,'Коля Иванов','m','kolya@ukr.net','(098)1234455','Киев',null)

SELECT SUM(BALANCE) FROM 
ACCOUNTS A
JOIN CLIENTS C
ON A.CLIENT_ID  = C.ID 
WHERE C.BANK_ID = 1
